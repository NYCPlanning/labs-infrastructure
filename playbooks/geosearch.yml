---
- hosts: all
  become: true
  vars:
    documentationdomain: geosearch-docs.planninglabs.nyc
    productiondomain: geosearch.planninglabs.nyc

    certbot_domains:
      - "{{ productiondomain }}"
    check_path: /v1/autocomplete?text=foo
    local_check_url: http://localhost:4000{{ check_path }}
    remote_check_url: "https://{{ productiondomain }}{{ check_path }}"
    checkout_dir: /srv/checkout
    repo_dir: "{{ checkout_dir }}/labs-geosearch-dockerfiles"
    run_import: false
  roles:
    - role: common
    - role: docker
    - role: nginx
  tasks:
    - name: Install pip
      apt:
        name: python3-pip
        update_cache: true
    - name: Install Docker Compose
      pip:
        name: docker-compose

    # - name: Clone repository
    #   git:
    #     repo: https://github.com/NYCPlanning/labs-geosearch-dockerfiles.git
    #     dest: "{{ checkout_dir }}"
    # uncomment for local development
    - name: Copy repository
      synchronize:
        src: ../../labs-geosearch-dockerfiles
        dest: "{{ checkout_dir }}"

    - name: Check that the API is available
      uri:
        url: "{{ local_check_url }}"
      ignore_errors: true
      register: api_results

    - name: Start the server
      command: ./build.sh
      args:
        chdir: "{{ repo_dir }}"
      environment:
        DATA_DIR: /srv
      when: api_results is failed

    - name: Check that the API is available
      uri:
        url: "{{ local_check_url }}"

    - name: Run the import
      command: ./import-pad.sh
      args:
        chdir: "{{ repo_dir }}"
      # environment:
      #   SLACK_WEBHOOK_URL: ...
      when: run_import

    # https://stackoverflow.com/a/33173605/358804
    - name: Fetch nginx template
      fetch:
        src: "{{ repo_dir }}/nginx.conf"
        dest: /tmp/nginx.conf
        flat: true
        fail_on_missing: true
      run_once: true
    - name: Add nginx config
      template:
        src: /tmp/nginx.conf
        dest: /etc/nginx/conf.d/{{ productiondomain }}.conf
      notify:
        - Check nginx config
        - Reload nginx

    - name: Set up certbot
      include_role:
        name: certbot
